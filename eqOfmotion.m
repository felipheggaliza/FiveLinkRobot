function [M,RHS] = eqOfmotion(theta_pos,theta_vel,torque)
% Computes the numerical Equation of Motion of a Five Link Robot using Lagragian Dynamics based on 
% Lecture Notes from Introduction to Robotics, H. Harry Asada - Chapter 7. Page 8 to 16.
% Last modification: 30/03/2014 (by Feliphe G. Galiza)

% parameters according to human body
height = 1.5; % [m]
L1 = 0.285*height; % [m]
L2 = (0.53 - 0.285)*height; % [m]
L3 = height - (L1 + L2); % [m]
L4 = L2; % [m]
L5 =L1; % [m]

r1 = L1/2; % [m]
r2 = L2/2; % [m]
r3 = L3/2; % [m]    
r4 = L4/2; % [m]
r5 = L5/2; % [m]

mass = 50; % [kg]
m1 = 0.061 * mass; % [kg]
m2 = 0.1 * mass; % [kg]
m3 = 0.678 * mass; % [kg]
m4 = m2; % [kg]
m5 = m1; % [kg]

Izz_1 = m1 * 0.735^2; % [kg*m^2]
Izz_2 = m2 * 0.540^2; % [kg*m^2]
Izz_3 = m3 * 0.0798^2; % [kg*m^2]
Izz_4 = Izz_2; % [kg*m^2]
Izz_5 = Izz_1; % [kg*m^2]

% joint angles
theta1 = theta_pos(1);
theta2 = theta_pos(2);
theta3= theta_pos(3);
theta4 = theta_pos(4);
theta5 = theta_pos(5);

% joint velocities
theta1_dot = theta_vel(1);
theta2_dot = theta_vel(2);
theta3_dot = theta_vel(3);
theta4_dot  = theta_vel(4);
theta5_dot = theta_vel(5);

% joint torques
u1 = torque(1);
u2 = torque(2);
u3 = torque(3);
u4 = torque(4);
u5 = torque(5);

% equation of motion
M(1,:) = [ Izz_1 + Izz_2 + Izz_3 + Izz_4 + Izz_5 + m4*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4))^2 + m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4))^2 + m3*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3))^2 + m4*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4))^2 + m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4))^2 + m3*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1))^2 + m2*(L1*cos(theta1) + cos(theta1 + theta2)*(L2 - r2))^2 + m2*(L1*sin(theta1) + sin(theta1 + theta2)*(L2 - r2))^2 + m1*cos(theta1)^2*(L1 - r1)^2 + m1*sin(theta1)^2*(L1 - r1)^2, Izz_2 + Izz_3 + Izz_4 + Izz_5 + m4*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4))*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m4*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)) + m3*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)) + m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m3*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2))*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1)) + m2*cos(theta1 + theta2)*(L1*cos(theta1) + cos(theta1 + theta2)*(L2 - r2))*(L2 - r2) + m2*sin(theta1 + theta2)*(L2 - r2)*(L1*sin(theta1) + sin(theta1 + theta2)*(L2 - r2)), Izz_3 + Izz_4 + Izz_5 + m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)) + m3*r3*cos(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)) + m3*r3*sin(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1)), m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) - Izz_5 - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - Izz_4 + m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)), Izz_5 + m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4))];
M(2,:) = [ Izz_2 + Izz_3 + Izz_4 + Izz_5 + m4*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4))*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m4*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)) + m3*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)) + m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m3*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2))*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1)) + m2*cos(theta1 + theta2)*(L1*cos(theta1) + cos(theta1 + theta2)*(L2 - r2))*(L2 - r2) + m2*sin(theta1 + theta2)*(L2 - r2)*(L1*sin(theta1) + sin(theta1 + theta2)*(L2 - r2)), Izz_2 + Izz_3 + Izz_4 + Izz_5 + m4*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4))^2 + m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4))^2 + m4*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))^2 + m3*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3))^2 + m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4))^2 + m3*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2))^2 + m2*cos(theta1 + theta2)^2*(L2 - r2)^2 + m2*sin(theta1 + theta2)^2*(L2 - r2)^2, Izz_3 + Izz_4 + Izz_5 + m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m3*r3*cos(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3)) + m3*r3*sin(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2)) - m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)), m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) - Izz_5 - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) - Izz_4 + m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)), Izz_5 + m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4))];
M(3,:) = [ Izz_3 + Izz_4 + Izz_5 + m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)) + m3*r3*cos(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)) + m3*r3*sin(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1)), Izz_3 + Izz_4 + Izz_5 + m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m3*r3*cos(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3)) + m3*r3*sin(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2)) - m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)), Izz_3 + Izz_4 + Izz_5 + m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))^2 + m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))^2 + m4*r4^2*sin(theta1 + theta2 + theta3 - theta4)^2 + m3*r3^2*cos(theta1 + theta2 + theta3)^2 + m3*r3^2*sin(theta1 + theta2 + theta3)^2 + m4*r4^2*cos(theta1 + theta2 + theta3 - theta4)^2, - Izz_4 - Izz_5 - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))^2 - m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))^2 - m4*r4^2*sin(theta1 + theta2 + theta3 - theta4)^2 - m4*r4^2*cos(theta1 + theta2 + theta3 - theta4)^2, Izz_5 + m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))];
M(4,:) = [ m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) - Izz_5 - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - Izz_4 + m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)), m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) - Izz_5 - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) - Izz_4 + m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)), - Izz_4 - Izz_5 - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))^2 - m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))^2 - m4*r4^2*sin(theta1 + theta2 + theta3 - theta4)^2 - m4*r4^2*cos(theta1 + theta2 + theta3 - theta4)^2, Izz_4 + Izz_5 + m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))^2 + m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))^2 + m4*r4^2*sin(theta1 + theta2 + theta3 - theta4)^2 + m4*r4^2*cos(theta1 + theta2 + theta3 - theta4)^2, - Izz_5 - m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))];
M(5,:) = [ Izz_5 + m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)), Izz_5 + m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)), Izz_5 + m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)), - Izz_5 - m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)), Izz_5 + m5*r5^2*cos(theta1 + theta2 + theta3 - theta4 + theta5)^2 + m5*r5^2*sin(theta1 + theta2 + theta3 - theta4 + theta5)^2];


RHS(1,1) = u1 + theta3_dot^2*(m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)) + m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)) - m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1))) - (981*m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/100 + (981*m3*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1)))/100 + theta2_dot^2*(m4*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) - m4*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4))*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)) + m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m3*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)) - m3*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3))*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1)) + m2*sin(theta1 + theta2)*(L1*cos(theta1) + cos(theta1 + theta2)*(L2 - r2))*(L2 - r2) - m2*cos(theta1 + theta2)*(L2 - r2)*(L1*sin(theta1) + sin(theta1 + theta2)*(L2 - r2))) + theta5_dot^2*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4))) + (981*m2*(L1*sin(theta1) + sin(theta1 + theta2)*(L2 - r2)))/100 + theta4_dot^2*(m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4))) + (981*m4*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)))/100 + theta2_dot*theta5_dot*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4))) - theta2_dot*theta5_dot*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4))) + theta1_dot*theta3_dot*(2*m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - 2*m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - 2*m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) + 2*m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)) + 2*m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)) - 2*m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1))) + (981*m1*sin(theta1)*(L1 - r1))/100 + theta1_dot*theta2_dot*(2*m4*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) - 2*m4*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4))*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)) + 2*m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - 2*m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) + 2*m3*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)) - 2*m3*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3))*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1)) + 2*m2*sin(theta1 + theta2)*(L1*cos(theta1) + cos(theta1 + theta2)*(L2 - r2))*(L2 - r2) - 2*m2*cos(theta1 + theta2)*(L2 - r2)*(L1*sin(theta1) + sin(theta1 + theta2)*(L2 - r2))) + theta3_dot*theta5_dot*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) + theta3_dot*theta5_dot*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) - theta4_dot*theta5_dot*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) - theta4_dot*theta5_dot*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) + theta1_dot*theta5_dot*(2*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - 2*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4))) + theta2_dot*theta3_dot*(m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3)) - m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)) + m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)) - m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))) + theta2_dot*theta3_dot*(m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3)) + m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)) + m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)) - m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1)) + m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) - m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))) - 2*theta3_dot*theta4_dot*(m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4))) - theta1_dot*theta4_dot*(2*m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - 2*m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - 2*m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) + 2*m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4))) - theta2_dot*theta4_dot*(m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))) - theta2_dot*theta4_dot*(m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)) + m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) - m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)));
RHS(2,1) = u2 - theta1_dot^2*(m4*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) - m4*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4))*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)) + m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m3*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2))*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)) - m3*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3))*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1)) + m2*sin(theta1 + theta2)*(L1*cos(theta1) + cos(theta1 + theta2)*(L2 - r2))*(L2 - r2) - m2*cos(theta1 + theta2)*(L2 - r2)*(L1*sin(theta1) + sin(theta1 + theta2)*(L2 - r2))) + theta5_dot^2*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4))) + (981*m4*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)))/100 - (981*m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/100 + (981*m3*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2)))/100 + theta4_dot^2*(m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))) + theta3_dot^2*(m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3)) - m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))) + (981*m2*sin(theta1 + theta2)*(L2 - r2))/100 + theta1_dot*theta5_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) + theta1_dot*theta5_dot*((3*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (3*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) + theta3_dot*theta5_dot*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) + theta3_dot*theta5_dot*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) - theta4_dot*theta5_dot*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) - theta4_dot*theta5_dot*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) + m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) + theta2_dot*theta5_dot*(2*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - 2*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4))) - theta1_dot*theta3_dot*((m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3)))/2 + (m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2)))/2 - (m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)))/2 - (m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1)))/2 + (m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2) + theta1_dot*theta3_dot*((m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (3*m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (3*m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (3*m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3)))/2 - (3*m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2)))/2 - (m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)))/2 - (m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1)))/2 - (3*m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (3*m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2) - 2*theta3_dot*theta4_dot*(m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))) - theta2_dot*theta4_dot*(2*m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - 2*m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) - 2*m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) + 2*m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))) + theta1_dot*theta4_dot*((m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2) - theta1_dot*theta4_dot*((m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (3*m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (3*m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (3*m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (3*m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2) + theta2_dot*theta3_dot*(2*m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - 2*m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) + 2*m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3)) - 2*m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2)) - 2*m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) + 2*m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)));
RHS(3,1) = u3 - theta1_dot^2*(m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)) + m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)) - m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1))) - (981*m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/100 + theta5_dot^2*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) - theta2_dot^2*(m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) + m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3)) - m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))) - (981*m4*r4*sin(theta1 + theta2 + theta3 - theta4))/100 - theta2_dot*theta5_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) + theta2_dot*theta5_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (3*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (3*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) - theta1_dot*theta5_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) + theta1_dot*theta5_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (3*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (3*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) + (981*m3*r3*sin(theta1 + theta2 + theta3))/100 - theta1_dot*theta2_dot*((m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3)))/2 - (m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2)))/2 - (m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)))/2 - (m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1)))/2 - (m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2) + theta1_dot*theta2_dot*((m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (3*m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (3*m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (3*m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + r3*cos(theta1 + theta2 + theta3)))/2 + (3*m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2)))/2 - (m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (m3*r3*sin(theta1 + theta2 + theta3)*(L2*cos(theta1 + theta2) + L1*cos(theta1) + r3*cos(theta1 + theta2 + theta3)))/2 - (m3*r3*cos(theta1 + theta2 + theta3)*(r3*sin(theta1 + theta2 + theta3) + L2*sin(theta1 + theta2) + L1*sin(theta1)))/2 + (3*m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (3*m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2) + theta3_dot*theta5_dot*(2*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - 2*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) - theta4_dot*theta5_dot*(2*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - 2*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)));
RHS(4,1) = u4 + (981*m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/100 - theta5_dot^2*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) + theta2_dot^2*(m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4))) + theta1_dot^2*(m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)) - m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)) + m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4))) + (981*m4*r4*sin(theta1 + theta2 + theta3 - theta4))/100 + theta2_dot*theta5_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) - theta2_dot*theta5_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (3*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (3*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) + theta1_dot*theta5_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) - theta1_dot*theta5_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (3*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (3*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) - theta3_dot*theta5_dot*(2*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - 2*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) + theta4_dot*theta5_dot*(2*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - 2*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) + theta1_dot*theta2_dot*((m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2) - theta1_dot*theta2_dot*((m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (3*m5*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (3*m5*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4))*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) + L1*cos(theta1) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) + L1*sin(theta1) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (3*m4*r4*sin(theta1 + theta2 + theta3 - theta4)*(L2*cos(theta1 + theta2) - r4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (3*m4*r4*cos(theta1 + theta2 + theta3 - theta4)*(L2*sin(theta1 + theta2) - r4*sin(theta1 + theta2 + theta3 - theta4)))/2);
RHS(5,1) = u5 - theta2_dot^2*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4))) - theta1_dot^2*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4))) - theta3_dot^2*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) - theta4_dot^2*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) - theta1_dot*theta2_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) - theta1_dot*theta2_dot*((3*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (3*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) - theta2_dot*theta3_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) + theta2_dot*theta4_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) + theta2_dot*theta3_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (3*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (3*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) - theta2_dot*theta4_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (3*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (3*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) - theta1_dot*theta3_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) + theta1_dot*theta4_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 + (m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) + theta1_dot*theta3_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (3*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (3*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) - theta1_dot*theta4_dot*((m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) - L2*cos(theta1 + theta2) - L1*cos(theta1) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (3*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)))/2 - (m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) - L2*sin(theta1 + theta2) - L1*sin(theta1) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2 + (3*m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4)))/2) + 2*theta3_dot*theta4_dot*(m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*cos(theta1 + theta2 + theta3 - theta4 + theta5) + L4*cos(theta1 + theta2 + theta3 - theta4)) - m5*r5*cos(theta1 + theta2 + theta3 - theta4 + theta5)*(r5*sin(theta1 + theta2 + theta3 - theta4 + theta5) + L4*sin(theta1 + theta2 + theta3 - theta4))) - (981*m5*r5*sin(theta1 + theta2 + theta3 - theta4 + theta5))/100;


% Equation of Motion is in the form M*x_dot = rhs, where x_dot is the time
% derivative of the states [q qd]'

end
